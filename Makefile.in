.PHONY: build build_ext clean install help
.ONESHELL:
.SHELL := /bin/bash
.EXPORT_ALL_VARIABLES:

CURRENT_FOLDER=$(shell basename "$$(pwd)")
PYTHON_CMD ?= $(shell command -v python3 || command -v python)
PYTHON_LIB := $(shell $(PYTHON_CMD) -c "import sys; print(f'python{sys.version_info.major}.{sys.version_info.minor}')")
PYTHON_VERSION := $(shell $(PYTHON_CMD) -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
PYTHON_FULL_VERSION := $(shell $(PYTHON_CMD) -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}')")

# Configure-substituted variables
PYTHON_INCLUDE = @PYTHON_INCLUDE@
PYTHON_LIB = @PYTHON_LIB@
LIBEV_INCLUDE = @LIBEV_INCLUDE@
LIBEV_LIB = @LIBEV_LIB@
GETTEXT_INCLUDE = @GETTEXT_INCLUDE@
GETTEXT_LIB = @GETTEXT_LIB@
OUTPUT = @OUTPUT@

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@

# Compiler flags from configure
CFLAGS = @CFLAGS@ -DLIB_DIR=\"$(libdir)\" -fPIC -O2 -Wall
CPPFLAGS = @CPPFLAGS@ -I$(PYTHON_INCLUDE) -I$(LIBEV_INCLUDE) -I$(GETTEXT_INCLUDE)
LDFLAGS = @LDFLAGS@ -L$(LIBEV_LIB) -L$(GETTEXT_LIB) -l$(PYTHON_LIB) -lev -lz

# for Mac, we compile statically
ifneq ($(OS),Windows_NT)
	UNAME_S := $(shell uname -s)
	ifeq ($(UNAME_S),Darwin)
		BREWERY_HOME := $(shell brew --prefix)
		PYTHON_HOME := $(shell brew --prefix python@$(PYTHON_VERSION))
		PYTHON_STATIC := $(shell find $(PYTHON_HOME) -name "Python")
		PYTHON_STATIC_LIB := $(shell find $(PYTHON_HOME) -name "libpython*.a")
		LDFLAGS := $(BREWERY_HOME)/opt/python@$(PYTHON_VERSION)/Frameworks/Python.framework/Versions/$(PYTHON_VERSION)/Python \
			$(PYTHON_STATIC_LIB) $(PYTHON_STATIC) \
			$(BREWERY_HOME)/opt/gettext/lib/libintl.a
	endif
endif

build: build_ext ## Build the application
	@gcc $(CFLAGS) $(CPPFLAGS) \
	main_wrapper.c $(shell cat sources.txt) \
	$(LDFLAGS) \
	-o $(OUTPUT)

test:
	@echo $(DESTDIR)
	@echo $(bindir)
	@echo $(libdir)
	@echo $(PYTHON_VERSION)

install: build ## Install the application
	install -d $(DESTDIR)$(bindir)
	install -m 755 $(OUTPUT) $(DESTDIR)$(bindir)/
	mkdir -p $(DESTDIR)$(libdir)
	cp -a build/lib.*/* $(DESTDIR)$(libdir)

build_ext: ## Build Cython extensions
	@$(PYTHON_CMD) setup_build.py build_ext --inplace

clean: ## Remove build artifacts
	@rm -rf build
	@rm -f cqlshlib/*.c
	@find cassandra -name "*.c" -exec rm -f {} \;
	@find wcwidth -name "*.c" -exec rm -f {} \;

help: ## Show this help message
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

# code: language=Makefile
